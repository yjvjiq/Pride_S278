%implements s7_b0_em11g_0_Outputs "C"

%function Outputs(block, system) Output
%assign cfgTxt = ""
%openfile cfgTxt
%assign localVarDecl = ""
%openfile localVarDecl
real32_T rtb_Add;
%closefile localVarDecl
/* Switch: '<S6>/Switch' incorporates:
 *  Constant: '<S1>/Constant4'
 *  Constant: '<S6>/zero'
 *  Constant: '<S7>/Constant'
 *  Constant: '<S8>/Constant'
 *  DataTypeConversion: '<S1>/Data Type Conversion'
 *  Inport: '<Root>/Tavg'
 *  Logic: '<S6>/and'
 *  RelationalOperator: '<S7>/Compare'
 *  RelationalOperator: '<S8>/Compare'
 *  Sum: '<S1>/Add'
 */
if (((real32_T)Tavg/*@>712*/ - 40.0F/*@>746:2*/ > -30.0F)/*@>744*/ && ((real32_T)Tavg/*@>712*/ - 40.0F/*@>745:2*/ < 57.0F)) {
    /* Lookup_n-D: '<S6>/linearizationSOF' incorporates:
 *  Inport: '<Root>/g_socValue'
 */
    rtb_Add = look2_iflf_binlxpw(Can_g_socValue, (real32_T)Tavg/*@>712*/ - 40.0F, %<(SLibCGIR_CSCPAddr(14, 11, "", -1, "", 0))>, %<(SLibCGIR_CSCPAddr(18, 12, "", -1, "", 0))>, %<(SLibCGIR_CSCPAddr(10, 132, "", -1, "", 0))>, YoungMan_LT_ConstP.linearizationSOF_maxIndex, 11UL);
} else {
    rtb_Add = 0.0F;
}
/* End of Switch: '<S6>/Switch' */

/* Gain: '<S1>/Gain' */
BiggestDischargeCurt_Model = %<(SLibCG_SE(SLibCGIR_CSCP(9, 1, "", -1, "", 0)))>/*@>722*/ * rtb_Add;
%closefile cfgTxt
%<cfgTxt>
%assign fcnProtoType = ""
%openfile fcnProtoType
static void YoungMa_BigDischargePowerAdjust(\
%assign comma = ""
%closefile fcnProtoType
%<SLibCG_SetFcnProtoType(0, 0, fcnProtoType)>
%<LibSetSystemField(system, "CachedOutputLocalVars", localVarDecl)>
%endfunction
