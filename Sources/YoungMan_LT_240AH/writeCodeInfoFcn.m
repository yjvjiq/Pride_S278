% Autogenerated file: Tue Jun 06 16:32:05 2017
function writeCodeInfoFcn


% Load a ComponentInterface object from IR
codeIRInfoStruct = load('E:\模型留存\新版模型\YoungMan_LT（新版SOF等模型）\S278_code\YoungMan_LT_ert_rtw\tlc\codeIRInfo.mat');
codeInfo = codeIRInfoStruct.codeInfo;




skippedParameters = [];
      checkDataGraphicalNames(codeInfo.Parameters(1).GraphicalName, 'CAP_CONST_CAL');


                
% Built-In Type: 1
Type_1_R0_V0 = numerictype('single');
  Type_1_R0_V0.Name = 'single';
  Type_1_R0_V0.Identifier = 'real32_T';
  Type_1_R0_V0.ReadOnly   = 0;
  Type_1_R0_V0.Volatile   = 0;
    
  % Matrix Type
  Type_18_R0_V0 = embedded.matrixtype;
  Type_18_R0_V0.BaseType   = Type_1_R0_V0;
    Type_18_R0_V0.Dimensions = [1, 1];
        
% Variable: Var_Par0
Var_Par0 = RTW.Variable(Type_18_R0_V0, 'CAP_CONST_CAL');
    Var_Par0.Owner           = 'YoungMan_LT';
    Var_Par0.DeclarationFile = 'YoungMan_LT.h';
    Var_Par0.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par0.StorageSpecifier = 'extern';
    
    % Setting Parameter#1's implementation  
    codeInfo.Parameters(1).Implementation = Var_Par0;
      checkDataGraphicalNames(codeInfo.Parameters(2).GraphicalName, 'DisChargeCurrentTable');


      
  % Matrix Type
  Type_21_R0_V0 = embedded.matrixtype;
  Type_21_R0_V0.BaseType   = Type_1_R0_V0;
    Type_21_R0_V0.Dimensions = [12, 17];
        
% Variable: Var_Par1
Var_Par1 = RTW.Variable(Type_21_R0_V0, 'DisChargeCurrentTable');
    Var_Par1.Owner           = 'YoungMan_LT';
    Var_Par1.DeclarationFile = 'YoungMan_LT.h';
    Var_Par1.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par1.StorageSpecifier = 'extern';
    
    % Setting Parameter#2's implementation  
    codeInfo.Parameters(2).Implementation = Var_Par1;
      checkDataGraphicalNames(codeInfo.Parameters(3).GraphicalName, 'Factor_PowerOnSOCAjust');


      
  % Matrix Type
  Type_23_R0_V0 = embedded.matrixtype;
  Type_23_R0_V0.BaseType   = Type_1_R0_V0;
    Type_23_R0_V0.Dimensions = [1, 8];
        
% Variable: Var_Par2
Var_Par2 = RTW.Variable(Type_23_R0_V0, 'Factor_PowerOnSOCAjust');
    Var_Par2.Owner           = 'YoungMan_LT';
    Var_Par2.DeclarationFile = 'YoungMan_LT.h';
    Var_Par2.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par2.StorageSpecifier = 'extern';
    
    % Setting Parameter#3's implementation  
    codeInfo.Parameters(3).Implementation = Var_Par2;
      checkDataGraphicalNames(codeInfo.Parameters(4).GraphicalName, 'FastChargeCurrentTable');


      
  % Matrix Type
  Type_25_R0_V0 = embedded.matrixtype;
  Type_25_R0_V0.BaseType   = Type_1_R0_V0;
    Type_25_R0_V0.Dimensions = [16, 11];
        
% Variable: Var_Par3
Var_Par3 = RTW.Variable(Type_25_R0_V0, 'FastChargeCurrentTable');
    Var_Par3.Owner           = 'YoungMan_LT';
    Var_Par3.DeclarationFile = 'YoungMan_LT.h';
    Var_Par3.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par3.StorageSpecifier = 'extern';
    
    % Setting Parameter#4's implementation  
    codeInfo.Parameters(4).Implementation = Var_Par3;
      checkDataGraphicalNames(codeInfo.Parameters(5).GraphicalName, 'FeedBackCurrentTable');


      
  % Matrix Type
  Type_27_R0_V0 = embedded.matrixtype;
  Type_27_R0_V0.BaseType   = Type_1_R0_V0;
    Type_27_R0_V0.Dimensions = [13, 16];
        
% Variable: Var_Par4
Var_Par4 = RTW.Variable(Type_27_R0_V0, 'FeedBackCurrentTable');
    Var_Par4.Owner           = 'YoungMan_LT';
    Var_Par4.DeclarationFile = 'YoungMan_LT.h';
    Var_Par4.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par4.StorageSpecifier = 'extern';
    
    % Setting Parameter#5's implementation  
    codeInfo.Parameters(5).Implementation = Var_Par4;
      checkDataGraphicalNames(codeInfo.Parameters(6).GraphicalName, 'SOC_Discharge');


      
  % Matrix Type
  Type_29_R0_V0 = embedded.matrixtype;
  Type_29_R0_V0.BaseType   = Type_1_R0_V0;
    Type_29_R0_V0.Dimensions = [1, 12];
        
% Variable: Var_Par5
Var_Par5 = RTW.Variable(Type_29_R0_V0, 'SOC_Discharge');
    Var_Par5.Owner           = 'YoungMan_LT';
    Var_Par5.DeclarationFile = 'YoungMan_LT.h';
    Var_Par5.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par5.StorageSpecifier = 'extern';
    
    % Setting Parameter#6's implementation  
    codeInfo.Parameters(6).Implementation = Var_Par5;
      checkDataGraphicalNames(codeInfo.Parameters(7).GraphicalName, 'SOC_FastCharge');


      
  % Matrix Type
  Type_31_R0_V0 = embedded.matrixtype;
  Type_31_R0_V0.BaseType   = Type_1_R0_V0;
    Type_31_R0_V0.Dimensions = [1, 11];
        
% Variable: Var_Par6
Var_Par6 = RTW.Variable(Type_31_R0_V0, 'SOC_FastCharge');
    Var_Par6.Owner           = 'YoungMan_LT';
    Var_Par6.DeclarationFile = 'YoungMan_LT.h';
    Var_Par6.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par6.StorageSpecifier = 'extern';
    
    % Setting Parameter#7's implementation  
    codeInfo.Parameters(7).Implementation = Var_Par6;
      checkDataGraphicalNames(codeInfo.Parameters(8).GraphicalName, 'SOC_Feedback');


      
  % Matrix Type
  Type_33_R0_V0 = embedded.matrixtype;
  Type_33_R0_V0.BaseType   = Type_1_R0_V0;
    Type_33_R0_V0.Dimensions = [1, 13];
        
% Variable: Var_Par7
Var_Par7 = RTW.Variable(Type_33_R0_V0, 'SOC_Feedback');
    Var_Par7.Owner           = 'YoungMan_LT';
    Var_Par7.DeclarationFile = 'YoungMan_LT.h';
    Var_Par7.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par7.StorageSpecifier = 'extern';
    
    % Setting Parameter#8's implementation  
    codeInfo.Parameters(8).Implementation = Var_Par7;
      checkDataGraphicalNames(codeInfo.Parameters(9).GraphicalName, 'T_ChargeEndSOCAjust');


    
% Variable: Var_Par8
Var_Par8 = RTW.Variable(Type_23_R0_V0, 'T_ChargeEndSOCAjust');
    Var_Par8.Owner           = 'YoungMan_LT';
    Var_Par8.DeclarationFile = 'YoungMan_LT.h';
    Var_Par8.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par8.StorageSpecifier = 'extern';
    
    % Setting Parameter#9's implementation  
    codeInfo.Parameters(9).Implementation = Var_Par8;
      checkDataGraphicalNames(codeInfo.Parameters(10).GraphicalName, 'T_Discharge');


      
  % Matrix Type
  Type_35_R0_V0 = embedded.matrixtype;
  Type_35_R0_V0.BaseType   = Type_1_R0_V0;
    Type_35_R0_V0.Dimensions = [1, 17];
        
% Variable: Var_Par9
Var_Par9 = RTW.Variable(Type_35_R0_V0, 'T_Discharge');
    Var_Par9.Owner           = 'YoungMan_LT';
    Var_Par9.DeclarationFile = 'YoungMan_LT.h';
    Var_Par9.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par9.StorageSpecifier = 'extern';
    
    % Setting Parameter#10's implementation  
    codeInfo.Parameters(10).Implementation = Var_Par9;
      checkDataGraphicalNames(codeInfo.Parameters(11).GraphicalName, 'T_Facdback');


      
  % Matrix Type
  Type_37_R0_V0 = embedded.matrixtype;
  Type_37_R0_V0.BaseType   = Type_1_R0_V0;
    Type_37_R0_V0.Dimensions = [1, 16];
        
% Variable: Var_Par10
Var_Par10 = RTW.Variable(Type_37_R0_V0, 'T_Facdback');
    Var_Par10.Owner           = 'YoungMan_LT';
    Var_Par10.DeclarationFile = 'YoungMan_LT.h';
    Var_Par10.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par10.StorageSpecifier = 'extern';
    
    % Setting Parameter#11's implementation  
    codeInfo.Parameters(11).Implementation = Var_Par10;
      checkDataGraphicalNames(codeInfo.Parameters(12).GraphicalName, 'T_FastCharge');


    
% Variable: Var_Par11
Var_Par11 = RTW.Variable(Type_37_R0_V0, 'T_FastCharge');
    Var_Par11.Owner           = 'YoungMan_LT';
    Var_Par11.DeclarationFile = 'YoungMan_LT.h';
    Var_Par11.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par11.StorageSpecifier = 'extern';
    
    % Setting Parameter#12's implementation  
    codeInfo.Parameters(12).Implementation = Var_Par11;
      checkDataGraphicalNames(codeInfo.Parameters(13).GraphicalName, 'T_PowerOnSOCAjust');


    
% Variable: Var_Par12
Var_Par12 = RTW.Variable(Type_23_R0_V0, 'T_PowerOnSOCAjust');
    Var_Par12.Owner           = 'YoungMan_LT';
    Var_Par12.DeclarationFile = 'YoungMan_LT.h';
    Var_Par12.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par12.StorageSpecifier = 'extern';
    
    % Setting Parameter#13's implementation  
    codeInfo.Parameters(13).Implementation = Var_Par12;
      checkDataGraphicalNames(codeInfo.Parameters(14).GraphicalName, 'V_CellLowest');


    
% Variable: Var_Par13
Var_Par13 = RTW.Variable(Type_23_R0_V0, 'V_CellLowest');
    Var_Par13.Owner           = 'YoungMan_LT';
    Var_Par13.DeclarationFile = 'YoungMan_LT.h';
    Var_Par13.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par13.StorageSpecifier = 'extern';
    
    % Setting Parameter#14's implementation  
    codeInfo.Parameters(14).Implementation = Var_Par13;
      checkDataGraphicalNames(codeInfo.Parameters(15).GraphicalName, 'Factor_ChargeEndSOCAjust');


                
% Fixed-Point Type
Type_14_R0_V0 = numerictype('Signed', 0, 'WordLength', 16);
       Type_14_R0_V0.DataTypeMode = 'Fixed-point: binary point scaling';
    Type_14_R0_V0.FixedExponent = -8;
  Type_14_R0_V0.Identifier = 'uint16_T';
  Type_14_R0_V0.Name       = 'ufix16_En8';
  Type_14_R0_V0.ReadOnly   = 0;
  Type_14_R0_V0.Volatile   = 0;
    
  % Matrix Type
  Type_39_R0_V0 = embedded.matrixtype;
  Type_39_R0_V0.BaseType   = Type_14_R0_V0;
    Type_39_R0_V0.Dimensions = [8, 8];
        
% Variable: Var_Par14
Var_Par14 = RTW.Variable(Type_39_R0_V0, 'Factor_ChargeEndSOCAjust');
    Var_Par14.Owner           = 'YoungMan_LT';
    Var_Par14.DeclarationFile = 'YoungMan_LT.h';
    Var_Par14.DefinitionFile  = 'YoungMan_LT.c';
    
              Var_Par14.StorageSpecifier = 'extern';
    
    % Setting Parameter#15's implementation  
    codeInfo.Parameters(15).Implementation = Var_Par14;

  tmpParams = [];
if ~isempty(tmpParams)
codeInfo.Parameters = [codeInfo.Parameters; tmpParams];
end

    tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = [];
tmpActualReturn = [];
  

  Initialize_Prototype = RTW.CImplementation;
  Initialize_Prototype.Arguments  = tmpArgs;
  Initialize_Prototype.Return     = tmpRet;
    Initialize_Prototype.HeaderFile = ['YoungMan_LT', '.h'];
  Initialize_Prototype.SourceFile = ['YoungMan_LT', '.c'];

  Initialize_Interface = RTW.FunctionInterface;
  Initialize_Interface.Prototype    = Initialize_Prototype;
  Initialize_Interface.ActualArgs   = tmpActualArgs;
  Initialize_Interface.ActualReturn = tmpActualReturn;

      Initialize_Prototype.Name = 'YoungMan_LT_initialize';
  time_constant = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, -1));
      Initialize_Interface.Timing = time_constant;
      codeInfo.InitializeFunctions =  [codeInfo.InitializeFunctions; Initialize_Interface'];

          tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = [];
tmpActualReturn = [];
        

  

  

  OutputUpdate_Prototype = RTW.CImplementation;
  OutputUpdate_Prototype.Arguments  = tmpArgs;
  OutputUpdate_Prototype.Return     = tmpRet;
    OutputUpdate_Prototype.HeaderFile = ['YoungMan_LT', '.h'];
  OutputUpdate_Prototype.SourceFile = ['YoungMan_LT', '.c'];

  OutputUpdate_Interface = RTW.FunctionInterface;
  OutputUpdate_Interface.Prototype    = OutputUpdate_Prototype;
  OutputUpdate_Interface.ActualArgs   = tmpActualArgs;
  OutputUpdate_Interface.ActualReturn = tmpActualReturn;

      OutputUpdate_Prototype.Name = 'YoungMan_LT_step';
  time_0 = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, 0));
      OutputUpdate_Interface.Timing = time_0;
      codeInfo.OutputFunctions =  [codeInfo.OutputFunctions; OutputUpdate_Interface'];

         
         
      tmpArgs         = [];
tmpActualArgs   = [];
tmpRet          = [];
tmpActualReturn = [];
  

  Terminate_Prototype = RTW.CImplementation;
  Terminate_Prototype.Arguments  = tmpArgs;
  Terminate_Prototype.Return     = tmpRet;
    Terminate_Prototype.HeaderFile = ['YoungMan_LT', '.h'];
  Terminate_Prototype.SourceFile = ['YoungMan_LT', '.c'];

  Terminate_Interface = RTW.FunctionInterface;
  Terminate_Interface.Prototype    = Terminate_Prototype;
  Terminate_Interface.ActualArgs   = tmpActualArgs;
  Terminate_Interface.ActualReturn = tmpActualReturn;

  time_constant = codeInfo.TimingProperties(getIndexFromTimingInternalId(codeInfo.TimingInternalIds, -1));
      Terminate_Interface.Timing = time_constant;
      Terminate_Prototype.Name = [codeInfo.Name, '_terminate'];
      codeInfo.TerminateFunctions =  [codeInfo.TerminateFunctions; Terminate_Interface'];


  


if ~isempty(skippedParameters)
codeInfo.Parameters(skippedParameters) = [];
end


% Handling Right-Click Builds
ss = rtwprivate('getSourceSubsystemHandle',codeInfo.GraphicalPath);
% Check if Rt-Click build, then re-map SIDs
if ~isempty(ss) && rtwprivate('rtwattic','hasSIDMap')
   codeInfo = modifyCodeInfoForSubsystemBuild(ss, codeInfo);
end

  lookupTableArray = [];         
  if exist('expInports', 'var')
    save codeInfo.mat codeInfo expInports lookupTableArray;
  else
    save codeInfo.mat codeInfo lookupTableArray;
  end
returnVal = 1;

% End Function: writeCodeInfoFcn

function idx = getIndexFromTimingInternalId(internalIdVec, internalId)
 idx = find(internalIdVec == internalId);
 if (isempty(idx) || (length(idx) > 1))
    ciMsg = 'Time object cannot be empty'; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: getIndexFromTimingInternalId

function checkDataGraphicalNames(ciName, rtwName)
  if (strcmp(ciName, rtwName) ~= 1)
    ciMsg = ['Name mismatch: ', ciName, ' and ', rtwName]; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: checkDataGraphicalNames

function iData = getInternalDataByName(iDataVec, iDataName)
 iData = find(iDataVec, 'GraphicalName', iDataName);
 if (isempty(iData) || (length(iData) > 1))
    ciMsg = 'Internal Data object cannot be empty'; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: getInternalDataByName

function iData = getInternalDataByVariableName(iDataVec, iDataVariableName)
 iData = [];
 for idxData = 1:numel(iDataVec)
    if strcmp(iDataVariableName, iDataVec(idxData).Implementation.VariableName)
       iData = iDataVec(idxData);
       break
    end
 end
 if isempty(iData)
    ciMsg = 'Internal Data object cannot be empty'; 
    ciExc = MException('RTW:buildProcess:CodeInfoInternalError',ciMsg);
    throw(ciExc);
  end
% End Function: getInternalDataByVariableName

function codeInfo = modifyCodeInfoForSubsystemBuild(ss, codeInfo)
    
% Extract Subsystem Build Map from AtticData
    Subsystem_Build_Mapping = rtwprivate('rtwattic','getSIDMap');

% Parameters
    for i = 1:length(codeInfo.Parameters)
        sid = codeInfo.Parameters(i).SID;        

        sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
        codeInfo.Parameters(i).SID = sid;        
    end
    
% Data Stores
     for i = 1:length(codeInfo.DataStores)
         sid = codeInfo.DataStores(i).SID;         

         sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
         codeInfo.DataStores(i).SID = sid;
     end
    
% Inports
    for i = 1:length(codeInfo.Inports)
        sid = codeInfo.Inports(i).SID;
        
        sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
        codeInfo.Inports(i).SID = sid;
    end
    
% Outports
    for i = 1:length(codeInfo.Outports)
        sid = codeInfo.Outports(i).SID;
 
        sid = Simulink.ID.getSubsystemBuildSID(sid,ss, Subsystem_Build_Mapping);
        codeInfo.Outports(i).SID = sid;
    end    
   
